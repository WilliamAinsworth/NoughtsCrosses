{"version":3,"sources":["./src/environments/environment.ts","./src/app/board/board.component.ts","./src/app/board/board.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-logic.service.ts","./src/app/board/grid-point/grid-point.component.ts","./src/app/board/grid-point/grid-point.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {GridPointComponent} from './grid-point/grid-point.component';\nimport {GameLogicService, player} from '../game-logic.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\n\nexport class BoardComponent {\n  public winnerString = '';\n\n  constructor(public gameLogicService: GameLogicService) {\n    document.addEventListener('GAME-OVER', this.updateWinner);\n    document.addEventListener('GAME-RESET', this.reset);\n\n  }\n\n\n  public restartClick(): void {\n    this.gameLogicService.resetGame();\n  }\n\n  private updateWinner = (): void => {\n    this.winnerString = '';\n    const endState = this.gameLogicService.gameState.endState;\n    if (endState) {\n      if (endState === 'WIN') {\n        this.winnerString = `${this.gameLogicService.gameState.currentPlayer} WINS! Play Again?`;\n      } else {\n        this.winnerString = 'The Game was a DRAW! Play Again?';\n      }\n    }\n  }\n\n  private reset = (): void => {\n    this.winnerString = '';\n  }\n}\n","<div class=\"container\">\n  <div class=\"msg\">\n    <h1>Welcome to Noughts & Crosses: {{winnerString}}</h1>\n  </div>\n  <div class=\"board\">\n\n    <app-grid-point></app-grid-point>\n    <app-grid-point></app-grid-point>\n    <app-grid-point></app-grid-point>\n\n    <app-grid-point></app-grid-point>\n    <app-grid-point></app-grid-point>\n    <app-grid-point></app-grid-point>\n\n    <app-grid-point></app-grid-point>\n    <app-grid-point></app-grid-point>\n    <app-grid-point></app-grid-point>\n\n  </div>\n\n\n  <button [className]=\"'restart'\" (click)=\"restartClick()\">\n    Restart\n  </button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'NoughtsCrosses';\n}\n","<h1>Noughts & Crosses</h1>\n<app-board></app-board>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './board/board.component';\nimport { GridPointComponent } from './board/grid-point/grid-point.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    GridPointComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\n\nexport enum player {\n  X = 'X',\n  O = 'O'\n}\n\nexport interface GameState {\n  currentPlayer: player;\n  boardState: string[];\n  endState?: 'WIN' | 'DRAW';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameLogicService {\n  private gameOverEvent = new Event('GAME-OVER');\n  private gameResetEvent = new Event('GAME-RESET');\n  private idCount = 0;\n\n  // @ts-ignore\n  public gameState: GameState;\n\n  private winningConditions = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  constructor() {\n    this.resetGame();\n  }\n\n  public getId(): number  {\n    const id = this.idCount;\n    this.idCount++;\n    return id;\n  }\n\n  public resetGame = () => {\n    this.gameState = {\n      currentPlayer: player.X,\n      boardState: ['', '', '', '', '', '', '', '', '']\n    };\n    this.idCount = 0;\n    document.dispatchEvent(this.gameResetEvent);\n  }\n\n\n  public takeTurn = (index: number) => {\n    // Scoring the board\n    this.gameState.boardState[index] = this.gameState.currentPlayer;\n\n    // Checking if game is over\n    if (!this.isGameOver()) {\n      // Swapping player\n      if (this.gameState.currentPlayer === player.X) {\n        this.gameState.currentPlayer = player.O;\n      }  else {\n        this.gameState.currentPlayer = player.X;\n      }\n    }\n  }\n\n  public isGameOver = (): boolean => {\n    for (const winCondition of this.winningConditions) {\n      const a = this.gameState.boardState[winCondition[0]];\n      const b = this.gameState.boardState[winCondition[1]];\n      const c = this.gameState.boardState[winCondition[2]];\n      if (a === '' || b === '' || c === '') {\n        continue;\n      }\n      if (a === b && b === c) {\n        this.gameOver('WIN');\n        return true;\n      }\n    }\n\n    if (!this.gameState.boardState.includes('')) {\n      this.gameOver('DRAW');\n      return true;\n    }\n    return false;\n  }\n\n  private gameOver = (endState: 'WIN' | 'DRAW') => {\n    this.gameState.endState = endState;\n    document.dispatchEvent(this.gameOverEvent);\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {GameLogicService} from '../../game-logic.service';\n\n@Component({\n  selector: 'app-grid-point',\n  templateUrl: './grid-point.component.html',\n  styleUrls: ['./grid-point.component.css']\n})\nexport class GridPointComponent {\n\n  public disabled = false;\n  public mark = '';\n  public id: number;\n\n  constructor(private gameLogicService: GameLogicService) {\n    this.id = this.gameLogicService.getId();\n    document.addEventListener('GAME-RESET', this.reset);\n    document.addEventListener('GAME-OVER', this.endGame);\n  }\n  public gridPointClick = () => {\n    this.disabled = true;\n    this.mark = this.gameLogicService.gameState.currentPlayer;\n    this.gameLogicService.takeTurn(this.id);\n    console.log(this.id + ' clicked');\n  }\n\n  private reset = (): void => {\n    this.disabled = false;\n    this.mark = '';\n  }\n\n  private endGame = (): void => {\n    this.disabled = true;\n\n  }\n}\n","<button [className]=\"mark + ' grid-item gridPoint'\" [disabled]=\"disabled\" (click)=\"gridPointClick()\">\n  {{ mark.toUpperCase() }}\n</button>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}